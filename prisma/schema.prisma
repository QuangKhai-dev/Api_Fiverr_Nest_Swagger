// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id             Int              @id @default(autoincrement())
  fullName       String
  email          String           @unique
  password       String
  avatar         String?
  phone          String
  description    String?
  birthday       String
  gender         Boolean
  role           String?          @default("admin")
  published      Boolean?         @default(true)
  createAt       DateTime         @default(now())
  skills         Skills[]
  certifications Certifications[]
  jobsCreated    Jobs[]
  jobsHired      JobsHired[]
  comments       Comments[]
  commentsJob    CommentsJob[]
  userComments   CommentsUser[]
}

model Comments {
  id      Int    @id @default(autoincrement())
  content String
  rate    Int
  userId  Int
  user    Users? @relation(fields: [userId], references: [id])
}

model CommentsJob {
  id     Int    @id @default(autoincrement())
  userId Int
  user   Users? @relation(fields: [userId], references: [id])
  jobId  Int
  job    Jobs?  @relation(fields: [jobId], references: [id])
}

model CommentsUser {
  id        Int    @id @default(autoincrement())
  userHired Int
  user      Users? @relation(fields: [userHired], references: [id])
}

model Skills {
  id               Int             @id @default(autoincrement())
  name             String
  categorySkills   String
  userId           Int
  UserId           Users           @relation(fields: [userId], references: [id])
  CategorySkills   CategorySkills? @relation(fields: [categorySkillsId], references: [id])
  categorySkillsId Int
  jobs             Jobs[]
}

model CategorySkills {
  id     Int      @id @default(autoincrement())
  name   String   @unique
  skills Skills[]
}

model Certifications {
  id     Int    @id @default(autoincrement())
  name   String
  url    String
  userId Int
  UserId Users  @relation(fields: [userId], references: [id])
}

model Jobs {
  id           Int           @id @default(autoincrement())
  name         String
  description  String
  salary       Int
  location     String
  status       Boolean
  user_id      Int
  job_skills   Skills[]
  userId       Users         @relation(fields: [user_id], references: [id])
  Jobs_Hired   JobsHired[]
  job_imaged   JobImage[]
  comments_job CommentsJob[]
}

model JobImage {
  id     Int    @id @default(autoincrement())
  image  String
  job_id Int
  jobId  Jobs   @relation(fields: [job_id], references: [id])
}

model JobsHired {
  id      Int    @id @default(autoincrement())
  user_id Int
  job_id  Jobs[]
  userId  Users  @relation(fields: [user_id], references: [id])
}
